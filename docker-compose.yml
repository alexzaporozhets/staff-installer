version: '2'

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ./etc/prometheus/:/etc/prometheus/
      - /mnt/prometheus:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
    expose:
      - 9090
    links:
      - cadvisor:cadvisor
    depends_on:
      - cadvisor
  
  node-exporter:
    image: prom/node-exporter
    restart: always
    expose:
      - 9001
 
  mongodb_exporter:
    image: eses/mongodb_exporter
    expose:
      - 9104
    volumes:
      - /media/mongodb_exporter/:/log
    command: -mongodb.uri mongodb://mongo/staffdotcom -log_dir /log
    restart: always
      
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    restart: always
  
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - /media/grafana:/var/lib/grafana
    environment:
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_SERVER_ROOT_URL: "/grafana/"
      GF_SECURITY_ADMIN_PASSWORD:
    restart: always

  nginx:
    build: src/nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./etc/nginx:/nginx/conf
    links:
      - api-server
      - app-web
      - app-admin
      - app-desktop
      - grafana
    restart: always
  
  api-server:
    image: staffreg-justinstaff.azurecr.io/staff-api-server:latest
    links:
     - mongo
    depends_on:
     - mongo
    ports:
      - "3000:3000"     
    environment:
     PORT: 3000
     MONGO_URI: mongodb://mongo/staffdotcom
     API_URL: "/"
     NODE_ENV: production
     NODE_API_CLUSTERS: 8
     INSTALL_MODE: "local"
     ATATUS_KEY: "61a362f515c14428865d5fc4214346cc"
    env_file:
      - env
    command: bash -c "sleep 5; cd /pipeline/source; node --optimize_for_size --max_old_space_size=460 server.js"
    restart: always

  api-stats:
    image: staffreg-justinstaff.azurecr.io/staff-api-server:latest
    links:
     - mongo
    environment:
     MONGO_URI: mongodb://mongo/staffdotcom
     NODE_ENV: production
    env_file:
      - env
    command: bash -c "sleep 5; cd /pipeline/source; node --optimize_for_size --max_old_space_size=460 --gc_interval=100 app/workers/stat.js"
    restart: always
 
  api-retention:
    image: staffreg-justinstaff.azurecr.io/staff-api-server:latest
    links:
     - mongo
    environment:
     MONGO_URI: mongodb://mongo/staffdotcom
     NODE_ENV: production
    env_file:
      - env
    command: bash -c "sleep 5; cd /pipeline/source; node --optimize_for_size --max_old_space_size=460 --gc_interval=100 app/workers/retention.js"
    restart: always
  
  app-web:
    image: staffreg-justinstaff.azurecr.io/staff-app-web:latest
    environment:
     API_URL: "/"
     BASE_DIR: "/app/"
    restart: always
    command: bash -c "cd /pipeline/source/dist && python -m SimpleHTTPServer 3000"
  
  app-admin:
    image: staffreg-justinstaff.azurecr.io/staff-app-admin:latest
    environment:
     API_URL: "/"
     BASE_DIR: "/admin/"
    restart: always
    command: bash -c "cd /pipeline/source/dist && python -m SimpleHTTPServer 3000"
  
  app-desktop:
    image: staffreg-justinstaff.azurecr.io/staff-app-desktop:latest
    environment:
     API_URL: "/"
     BASE_DIR: "/desktop/"
    restart: always
    command: bash -c "cd /pipeline/source/dist && python -m SimpleHTTPServer 3000"
   
  mongo:
    image: mongo
    volumes:
      - /media/mongodb:/data/db
    restart: always
 
  azure-sensor:
    image: microsoft/applicationinsights
    command: ikey=6115c4d3-f555-481f-b170-b5b62da16017
    volumes:
      - /var/run/docker.sock:/docker.sock


version: '2'

services:
  nginx:
    build: src/nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./etc/nginx:/nginx/conf
    links:
      - api-server
      - app-web
      - app-admin
      - app-desktop
    restart: always
  
  api-server:
    image: staffreg-justinstaff.azurecr.io/staff-api-server:latest
    links:
     - mongo
     - redis
    depends_on:
     - mongo
    ports:
      - "3000:3000"     
    environment:
     PORT: 3000
     MONGO_URI: mongodb://mongo/staffdotcom
     API_URL: "/"
     NODE_ENV: production
     NODE_API_CLUSTERS: 8
     INSTALL_MODE: "local"
     ATATUS_KEY: "61a362f515c14428865d5fc4214346cc"
     OPBEAT_APP_ID: 8ea489d0e0
     OPBEAT_ORGANIZATION_ID: 1c9bc5acd0b84c89a6d94c1d4c14dbce
     OPBEAT_SECRET_TOKEN: 52a807f598a8860dd3104520ec6f09f054a065af
    env_file:
      - env
    command: bash -c "sleep 5; cd /pipeline/source; node --optimize_for_size --max_old_space_size=460 server.js"
    restart: always

  api-stats:
    image: staffreg-justinstaff.azurecr.io/staff-api-server:latest
    links:
     - mongo
     - redis
    environment:
     MONGO_URI: mongodb://mongo/staffdotcom
     NODE_ENV: production
    env_file:
      - env
    command: bash -c "sleep 5; cd /pipeline/source; node --optimize_for_size --max_old_space_size=460 --gc_interval=100 app/workers/stat.js"
    restart: always
 
  api-retention:
    image: staffreg-justinstaff.azurecr.io/staff-api-server:latest
    links:
     - mongo
     - redis
    environment:
     MONGO_URI: mongodb://mongo/staffdotcom
     NODE_ENV: production
    env_file:
      - env
    command: bash -c "sleep 5; cd /pipeline/source; node --optimize_for_size --max_old_space_size=460 --gc_interval=100 app/workers/retention.js"
    restart: always
  
  app-web:
    image: staffreg-justinstaff.azurecr.io/staff-app-web:latest
    environment:
     API_URL: "/"
     BASE_DIR: "/app/"
    restart: always
    command: bash -c "cd /pipeline/source/dist && python -m SimpleHTTPServer 3000"
  
  app-admin:
    image: staffreg-justinstaff.azurecr.io/staff-app-admin:latest
    environment:
     API_URL: "/"
     BASE_DIR: "/admin/"
    restart: always
    command: bash -c "cd /pipeline/source/dist && python -m SimpleHTTPServer 3000"
  
  app-desktop:
    image: staffreg-justinstaff.azurecr.io/staff-app-desktop:latest
    environment:
     API_URL: "/"
     BASE_DIR: "/desktop/"
    restart: always
    command: bash -c "cd /pipeline/source/dist && python -m SimpleHTTPServer 3000"
   
  mongo:
    image: mongo
    volumes:
      - /media/mongodb:/data/db
    restart: always
 
  mongo-backup:
    build: src/mongodb-backup
    privileged: true
    depends_on:
      - mongo
      - azure-mongo-backup
    env_file:
      - env
    environment:
      MONGODB_HOST: mongo
      MONGODB_PORT: 27017
      MONGODB_DB: staffdotcom
      CRON_TIME: '0 0 * * *'
      MAX_BACKUPS: 10
      INIT_BACKUP: 1
      AZURE_BACKUP_SHARE: backup
    cap_add:
      - ALL
    restart: always

  azure-mongo-backup:
    env_file:
      - env
    build: src/azure-backup
    
  azure-sensor:
    image: microsoft/applicationinsights
    command: ikey=${AZURE_MONITORING_KEY}
    env_file:
      - env
    volumes:
      - /var/run/docker.sock:/docker.sock

  redis:
    image: redis
    restart: always

version: '2'

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./etc/prometheus/:/etc/prometheus/
      - ./storage/prometheus:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
    expose:
      - 9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
  
  node-exporter:
    image: prom/node-exporter
    expose:
      - 9001
 
  redis_exporter:
    image: 21zoo/redis_exporter
    command: -redis.addr=redis:6379

 
  mongodb_exporter:
    image: eses/mongodb_exporter
    expose:
      - 9104
    volumes:
      - ./storage/mongodb_exporter/:/log
    command: -mongodb.uri mongodb://mongo/staffdotcom -log_dir /log

  alertmanager:
    image: prom/alertmanager
    volumes: 
      - ./etc/alertmanager/:/etc/alertmanager/
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
      
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
  
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3003:3000
    volumes:
      - ./storage/grafana:/var/lib/grafana
    env_file:
      - config.monitoring

  nginx:
    image: danday74/nginx-lua
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./etc/nginx/nginx.conf:/nginx/conf/nginx.conf
      - ./etc/nginx/prometheus.lua:/etc/nginx/prometheus.lua
    links:
      - api-server
      - app-web
      - app-admin
      - app-desktop
  
  api-server:
    image: 847166803921.dkr.ecr.us-east-1.amazonaws.com/staff-api-server:latest
    links:
     - mongo
     - rabbitmq
     - redis
    
    ports:
      - "3000:3000"     
     
    environment:
     PORT: 3000
     MONGO_URI: mongodb://mongo/staffdotcom
     RABBIT_URI: amqp://rabbitmq
     REDIS_URL: redis://redis
     API_URL: "http://api.staff.local"
     NODE_ENV: production
     NODE_API_CLUSTERS: 8
     DEBUG_MQ: 1
  
    command: bash -c "sleep 5; cd /pipeline/source && npm start"
  
  
  app-web:
    image: 847166803921.dkr.ecr.us-east-1.amazonaws.com/staff-app-web:latest
    environment:
     PORT: 3000
     API_URL: "http://api.staff.local"
     NODE_ENV: production
    
    command: bash -c "cd /pipeline/source/dist && python -m SimpleHTTPServer 3000"
  
  app-admin:
    image: 847166803921.dkr.ecr.us-east-1.amazonaws.com/staff-app-admin:latest
    environment:
     PORT: 3000
     API_URL: "http://api.staff.local"
     NODE_ENV: production
  
  app-desktop:
    image: 847166803921.dkr.ecr.us-east-1.amazonaws.com/staff-app-desktop:latest
    environment:
     PORT: 3000
     API_URL: "http://api.staff.local"
     NODE_ENV: production
  
  mongo:
    image: mongo
    volumes:
      - ./storage/mongodb:/data/db
  
  rabbitmq:
    image: rabbitmq:3
    ports:
      - "15672:15672"
      - "5672:5672"
      - "1883:1883"

  redis:
    image: redis
